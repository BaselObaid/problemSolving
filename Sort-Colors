75. Sort Colors
Solved
Medium

Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

You must solve this problem without using the library's sort function.

 

Example 1:

Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]
 

Constraints:

n == nums.length
1 <= n <= 300
nums[i] is either 0, 1, or 2.
 

Follow up: Could you come up with a one-pass algorithm using only constant extra space?


the solution: by insertion sort (the only constant extra spacec is 'i' in insert method)
Best => O(n) , (AVG, Worst) => O(n^2)

class Solution {
    public void sortColors(int[] nums) {
        for(int pos = 1; pos < nums.length; pos++){
            insert(nums, pos, nums[pos]);
        }
    }

    void insert(int [] nums, int pos, int value){
        int i = pos-1;
        while(i >=0 && nums[i] > value){
            nums[i+1] = nums[i];
            i -=1;
        }
        nums[i+1] = value;
    }
}
